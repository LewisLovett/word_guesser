correctWord
scrambledWord
userScore
computerScore
timer
computerDifficulty
apiURL

chooseWord():
	get user difficulty choice from html input
	if (easy):
		make and api call for a random word with 4 letters
	else if (medium):
		make and api call for a random word with 6 letters
	else if (hard):
		make and api call for a random word with 8 letters


scrambleWord(currentWord):	
	scramble word
	return scrambled word

compareInputWithCorrectWord(inputWord, isPlayerInput):
	if (inputWord equals correctWord)
		if (isPlayerInput TRUE):
			userScore increases
		else:
			computerScore increases
		call chooseWord() to generate new word
	else
		output 'try again'

handleUserINput(userInputWord):
	call compareInputWithCorrectWord passing the users's attempt to unscramble the word and isPlayerInput = TRUE

computerAttemptToGuessWord ():
	randomly scramble scrambledWord
	call compareInputWithCorrectWord passing the computer's attempt to unscramble the word and isPlayerInput = FALSE

computerGuessAttemptTimer ():
	create interval timer
	at every interval call computerAttemptToGuessWord

gameTimer ():
	create interval timer
	when timer has finished call endGame()
	
endGame ():
	if (userScore > computerScore):
		output user wins
	else if (userScore < computerScore):
		output computer wins
	else:
		output tie